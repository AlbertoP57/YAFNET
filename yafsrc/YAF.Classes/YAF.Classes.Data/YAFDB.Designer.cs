//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.91
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace YAF.Classes.Data {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("YAFDB")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class YAFDB : System.Data.DataSet {
        
        private yaf_PageLoadDataTable tableyaf_PageLoad;
        
        private yaf_RegistryDataTable tableyaf_Registry;
        
        private yaf_BannedIPDataTable tableyaf_BannedIP;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public YAFDB() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected YAFDB(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["yaf_PageLoad"] != null)) {
                    base.Tables.Add(new yaf_PageLoadDataTable(ds.Tables["yaf_PageLoad"]));
                }
                if ((ds.Tables["yaf_Registry"] != null)) {
                    base.Tables.Add(new yaf_RegistryDataTable(ds.Tables["yaf_Registry"]));
                }
                if ((ds.Tables["yaf_BannedIP"] != null)) {
                    base.Tables.Add(new yaf_BannedIPDataTable(ds.Tables["yaf_BannedIP"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public yaf_PageLoadDataTable yaf_PageLoad {
            get {
                return this.tableyaf_PageLoad;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public yaf_RegistryDataTable yaf_Registry {
            get {
                return this.tableyaf_Registry;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public yaf_BannedIPDataTable yaf_BannedIP {
            get {
                return this.tableyaf_BannedIP;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            YAFDB cln = ((YAFDB)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["yaf_PageLoad"] != null)) {
                    base.Tables.Add(new yaf_PageLoadDataTable(ds.Tables["yaf_PageLoad"]));
                }
                if ((ds.Tables["yaf_Registry"] != null)) {
                    base.Tables.Add(new yaf_RegistryDataTable(ds.Tables["yaf_Registry"]));
                }
                if ((ds.Tables["yaf_BannedIP"] != null)) {
                    base.Tables.Add(new yaf_BannedIPDataTable(ds.Tables["yaf_BannedIP"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableyaf_PageLoad = ((yaf_PageLoadDataTable)(base.Tables["yaf_PageLoad"]));
            if ((initTable == true)) {
                if ((this.tableyaf_PageLoad != null)) {
                    this.tableyaf_PageLoad.InitVars();
                }
            }
            this.tableyaf_Registry = ((yaf_RegistryDataTable)(base.Tables["yaf_Registry"]));
            if ((initTable == true)) {
                if ((this.tableyaf_Registry != null)) {
                    this.tableyaf_Registry.InitVars();
                }
            }
            this.tableyaf_BannedIP = ((yaf_BannedIPDataTable)(base.Tables["yaf_BannedIP"]));
            if ((initTable == true)) {
                if ((this.tableyaf_BannedIP != null)) {
                    this.tableyaf_BannedIP.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "YAFDB";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/YAFDB.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableyaf_PageLoad = new yaf_PageLoadDataTable();
            base.Tables.Add(this.tableyaf_PageLoad);
            this.tableyaf_Registry = new yaf_RegistryDataTable();
            base.Tables.Add(this.tableyaf_Registry);
            this.tableyaf_BannedIP = new yaf_BannedIPDataTable();
            base.Tables.Add(this.tableyaf_BannedIP);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeyaf_PageLoad() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeyaf_Registry() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeyaf_BannedIP() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            YAFDB ds = new YAFDB();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void yaf_PageLoadRowChangeEventHandler(object sender, yaf_PageLoadRowChangeEvent e);
        
        public delegate void yaf_RegistryRowChangeEventHandler(object sender, yaf_RegistryRowChangeEvent e);
        
        public delegate void yaf_BannedIPRowChangeEventHandler(object sender, yaf_BannedIPRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class yaf_PageLoadDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnUserID;
            
            private System.Data.DataColumn columnProviderUserKey;
            
            private System.Data.DataColumn columnUserFlags;
            
            private System.Data.DataColumn columnUserName;
            
            private System.Data.DataColumn columnSuspended;
            
            private System.Data.DataColumn columnThemeFile;
            
            private System.Data.DataColumn columnLanguageFile;
            
            private System.Data.DataColumn columnTimeZoneUser;
            
            private System.Data.DataColumn columnPreviousVisit;
            
            private System.Data.DataColumn columnIsGuest;
            
            private System.Data.DataColumn columnUserID1;
            
            private System.Data.DataColumn columnForumID;
            
            private System.Data.DataColumn columnIsAdmin;
            
            private System.Data.DataColumn columnIsForumModerator;
            
            private System.Data.DataColumn columnIsModerator;
            
            private System.Data.DataColumn columnReadAccess;
            
            private System.Data.DataColumn columnPostAccess;
            
            private System.Data.DataColumn columnReplyAccess;
            
            private System.Data.DataColumn columnPriorityAccess;
            
            private System.Data.DataColumn columnPollAccess;
            
            private System.Data.DataColumn columnVoteAccess;
            
            private System.Data.DataColumn columnModeratorAccess;
            
            private System.Data.DataColumn columnEditAccess;
            
            private System.Data.DataColumn columnDeleteAccess;
            
            private System.Data.DataColumn columnUploadAccess;
            
            private System.Data.DataColumn columnCategoryID;
            
            private System.Data.DataColumn columnCategoryName;
            
            private System.Data.DataColumn columnForumID1;
            
            private System.Data.DataColumn columnForumName;
            
            private System.Data.DataColumn columnTopicID;
            
            private System.Data.DataColumn columnTopicName;
            
            private System.Data.DataColumn columnMailsPending;
            
            private System.Data.DataColumn columnIncoming;
            
            private System.Data.DataColumn columnForumTheme;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public yaf_PageLoadDataTable() {
                this.TableName = "yaf_PageLoad";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal yaf_PageLoadDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected yaf_PageLoadDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ProviderUserKeyColumn {
                get {
                    return this.columnProviderUserKey;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UserFlagsColumn {
                get {
                    return this.columnUserFlags;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UserNameColumn {
                get {
                    return this.columnUserName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SuspendedColumn {
                get {
                    return this.columnSuspended;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ThemeFileColumn {
                get {
                    return this.columnThemeFile;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LanguageFileColumn {
                get {
                    return this.columnLanguageFile;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TimeZoneUserColumn {
                get {
                    return this.columnTimeZoneUser;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PreviousVisitColumn {
                get {
                    return this.columnPreviousVisit;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IsGuestColumn {
                get {
                    return this.columnIsGuest;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UserID1Column {
                get {
                    return this.columnUserID1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ForumIDColumn {
                get {
                    return this.columnForumID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IsAdminColumn {
                get {
                    return this.columnIsAdmin;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IsForumModeratorColumn {
                get {
                    return this.columnIsForumModerator;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IsModeratorColumn {
                get {
                    return this.columnIsModerator;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ReadAccessColumn {
                get {
                    return this.columnReadAccess;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PostAccessColumn {
                get {
                    return this.columnPostAccess;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ReplyAccessColumn {
                get {
                    return this.columnReplyAccess;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PriorityAccessColumn {
                get {
                    return this.columnPriorityAccess;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PollAccessColumn {
                get {
                    return this.columnPollAccess;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VoteAccessColumn {
                get {
                    return this.columnVoteAccess;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ModeratorAccessColumn {
                get {
                    return this.columnModeratorAccess;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EditAccessColumn {
                get {
                    return this.columnEditAccess;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DeleteAccessColumn {
                get {
                    return this.columnDeleteAccess;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UploadAccessColumn {
                get {
                    return this.columnUploadAccess;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CategoryIDColumn {
                get {
                    return this.columnCategoryID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CategoryNameColumn {
                get {
                    return this.columnCategoryName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ForumID1Column {
                get {
                    return this.columnForumID1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ForumNameColumn {
                get {
                    return this.columnForumName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TopicIDColumn {
                get {
                    return this.columnTopicID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TopicNameColumn {
                get {
                    return this.columnTopicName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MailsPendingColumn {
                get {
                    return this.columnMailsPending;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IncomingColumn {
                get {
                    return this.columnIncoming;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ForumThemeColumn {
                get {
                    return this.columnForumTheme;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public yaf_PageLoadRow this[int index] {
                get {
                    return ((yaf_PageLoadRow)(this.Rows[index]));
                }
            }
            
            public event yaf_PageLoadRowChangeEventHandler yaf_PageLoadRowChanging;
            
            public event yaf_PageLoadRowChangeEventHandler yaf_PageLoadRowChanged;
            
            public event yaf_PageLoadRowChangeEventHandler yaf_PageLoadRowDeleting;
            
            public event yaf_PageLoadRowChangeEventHandler yaf_PageLoadRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addyaf_PageLoadRow(yaf_PageLoadRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public yaf_PageLoadRow Addyaf_PageLoadRow(
                        System.Guid ProviderUserKey, 
                        int UserFlags, 
                        string UserName, 
                        System.DateTime Suspended, 
                        string ThemeFile, 
                        string LanguageFile, 
                        int TimeZoneUser, 
                        System.DateTime PreviousVisit, 
                        int IsGuest, 
                        int UserID1, 
                        int ForumID, 
                        int IsAdmin, 
                        int IsForumModerator, 
                        int IsModerator, 
                        int ReadAccess, 
                        int PostAccess, 
                        int ReplyAccess, 
                        int PriorityAccess, 
                        int PollAccess, 
                        int VoteAccess, 
                        int ModeratorAccess, 
                        int EditAccess, 
                        int DeleteAccess, 
                        int UploadAccess, 
                        int CategoryID, 
                        string CategoryName, 
                        int ForumID1, 
                        string ForumName, 
                        int TopicID, 
                        string TopicName, 
                        int MailsPending, 
                        int Incoming, 
                        string ForumTheme) {
                yaf_PageLoadRow rowyaf_PageLoadRow = ((yaf_PageLoadRow)(this.NewRow()));
                rowyaf_PageLoadRow.ItemArray = new object[] {
                        null,
                        ProviderUserKey,
                        UserFlags,
                        UserName,
                        Suspended,
                        ThemeFile,
                        LanguageFile,
                        TimeZoneUser,
                        PreviousVisit,
                        IsGuest,
                        UserID1,
                        ForumID,
                        IsAdmin,
                        IsForumModerator,
                        IsModerator,
                        ReadAccess,
                        PostAccess,
                        ReplyAccess,
                        PriorityAccess,
                        PollAccess,
                        VoteAccess,
                        ModeratorAccess,
                        EditAccess,
                        DeleteAccess,
                        UploadAccess,
                        CategoryID,
                        CategoryName,
                        ForumID1,
                        ForumName,
                        TopicID,
                        TopicName,
                        MailsPending,
                        Incoming,
                        ForumTheme};
                this.Rows.Add(rowyaf_PageLoadRow);
                return rowyaf_PageLoadRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public yaf_PageLoadRow FindByUserID(int UserID) {
                return ((yaf_PageLoadRow)(this.Rows.Find(new object[] {
                            UserID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                yaf_PageLoadDataTable cln = ((yaf_PageLoadDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new yaf_PageLoadDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUserID = base.Columns["UserID"];
                this.columnProviderUserKey = base.Columns["ProviderUserKey"];
                this.columnUserFlags = base.Columns["UserFlags"];
                this.columnUserName = base.Columns["UserName"];
                this.columnSuspended = base.Columns["Suspended"];
                this.columnThemeFile = base.Columns["ThemeFile"];
                this.columnLanguageFile = base.Columns["LanguageFile"];
                this.columnTimeZoneUser = base.Columns["TimeZoneUser"];
                this.columnPreviousVisit = base.Columns["PreviousVisit"];
                this.columnIsGuest = base.Columns["IsGuest"];
                this.columnUserID1 = base.Columns["UserID1"];
                this.columnForumID = base.Columns["ForumID"];
                this.columnIsAdmin = base.Columns["IsAdmin"];
                this.columnIsForumModerator = base.Columns["IsForumModerator"];
                this.columnIsModerator = base.Columns["IsModerator"];
                this.columnReadAccess = base.Columns["ReadAccess"];
                this.columnPostAccess = base.Columns["PostAccess"];
                this.columnReplyAccess = base.Columns["ReplyAccess"];
                this.columnPriorityAccess = base.Columns["PriorityAccess"];
                this.columnPollAccess = base.Columns["PollAccess"];
                this.columnVoteAccess = base.Columns["VoteAccess"];
                this.columnModeratorAccess = base.Columns["ModeratorAccess"];
                this.columnEditAccess = base.Columns["EditAccess"];
                this.columnDeleteAccess = base.Columns["DeleteAccess"];
                this.columnUploadAccess = base.Columns["UploadAccess"];
                this.columnCategoryID = base.Columns["CategoryID"];
                this.columnCategoryName = base.Columns["CategoryName"];
                this.columnForumID1 = base.Columns["ForumID1"];
                this.columnForumName = base.Columns["ForumName"];
                this.columnTopicID = base.Columns["TopicID"];
                this.columnTopicName = base.Columns["TopicName"];
                this.columnMailsPending = base.Columns["MailsPending"];
                this.columnIncoming = base.Columns["Incoming"];
                this.columnForumTheme = base.Columns["ForumTheme"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUserID = new System.Data.DataColumn("UserID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnProviderUserKey = new System.Data.DataColumn("ProviderUserKey", typeof(System.Guid), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProviderUserKey);
                this.columnUserFlags = new System.Data.DataColumn("UserFlags", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserFlags);
                this.columnUserName = new System.Data.DataColumn("UserName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserName);
                this.columnSuspended = new System.Data.DataColumn("Suspended", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuspended);
                this.columnThemeFile = new System.Data.DataColumn("ThemeFile", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnThemeFile);
                this.columnLanguageFile = new System.Data.DataColumn("LanguageFile", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLanguageFile);
                this.columnTimeZoneUser = new System.Data.DataColumn("TimeZoneUser", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeZoneUser);
                this.columnPreviousVisit = new System.Data.DataColumn("PreviousVisit", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviousVisit);
                this.columnIsGuest = new System.Data.DataColumn("IsGuest", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsGuest);
                this.columnUserID1 = new System.Data.DataColumn("UserID1", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID1);
                this.columnForumID = new System.Data.DataColumn("ForumID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnForumID);
                this.columnIsAdmin = new System.Data.DataColumn("IsAdmin", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsAdmin);
                this.columnIsForumModerator = new System.Data.DataColumn("IsForumModerator", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsForumModerator);
                this.columnIsModerator = new System.Data.DataColumn("IsModerator", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsModerator);
                this.columnReadAccess = new System.Data.DataColumn("ReadAccess", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnReadAccess);
                this.columnPostAccess = new System.Data.DataColumn("PostAccess", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostAccess);
                this.columnReplyAccess = new System.Data.DataColumn("ReplyAccess", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnReplyAccess);
                this.columnPriorityAccess = new System.Data.DataColumn("PriorityAccess", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriorityAccess);
                this.columnPollAccess = new System.Data.DataColumn("PollAccess", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPollAccess);
                this.columnVoteAccess = new System.Data.DataColumn("VoteAccess", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoteAccess);
                this.columnModeratorAccess = new System.Data.DataColumn("ModeratorAccess", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnModeratorAccess);
                this.columnEditAccess = new System.Data.DataColumn("EditAccess", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEditAccess);
                this.columnDeleteAccess = new System.Data.DataColumn("DeleteAccess", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleteAccess);
                this.columnUploadAccess = new System.Data.DataColumn("UploadAccess", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUploadAccess);
                this.columnCategoryID = new System.Data.DataColumn("CategoryID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryID);
                this.columnCategoryName = new System.Data.DataColumn("CategoryName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryName);
                this.columnForumID1 = new System.Data.DataColumn("ForumID1", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnForumID1);
                this.columnForumName = new System.Data.DataColumn("ForumName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnForumName);
                this.columnTopicID = new System.Data.DataColumn("TopicID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTopicID);
                this.columnTopicName = new System.Data.DataColumn("TopicName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTopicName);
                this.columnMailsPending = new System.Data.DataColumn("MailsPending", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMailsPending);
                this.columnIncoming = new System.Data.DataColumn("Incoming", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncoming);
                this.columnForumTheme = new System.Data.DataColumn("ForumTheme", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnForumTheme);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnUserID}, true));
                this.columnUserID.AutoIncrement = true;
                this.columnUserID.AllowDBNull = false;
                this.columnUserID.ReadOnly = true;
                this.columnUserID.Unique = true;
                this.columnUserFlags.AllowDBNull = false;
                this.columnUserName.AllowDBNull = false;
                this.columnUserName.MaxLength = 50;
                this.columnThemeFile.MaxLength = 50;
                this.columnLanguageFile.MaxLength = 50;
                this.columnTimeZoneUser.AllowDBNull = false;
                this.columnPreviousVisit.ReadOnly = true;
                this.columnIsGuest.ReadOnly = true;
                this.columnCategoryID.ReadOnly = true;
                this.columnCategoryName.ReadOnly = true;
                this.columnCategoryName.MaxLength = 50;
                this.columnForumID1.ReadOnly = true;
                this.columnForumName.ReadOnly = true;
                this.columnForumName.MaxLength = 50;
                this.columnTopicID.ReadOnly = true;
                this.columnTopicName.ReadOnly = true;
                this.columnTopicName.MaxLength = 100;
                this.columnMailsPending.ReadOnly = true;
                this.columnIncoming.ReadOnly = true;
                this.columnForumTheme.ReadOnly = true;
                this.columnForumTheme.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public yaf_PageLoadRow Newyaf_PageLoadRow() {
                return ((yaf_PageLoadRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new yaf_PageLoadRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(yaf_PageLoadRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.yaf_PageLoadRowChanged != null)) {
                    this.yaf_PageLoadRowChanged(this, new yaf_PageLoadRowChangeEvent(((yaf_PageLoadRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.yaf_PageLoadRowChanging != null)) {
                    this.yaf_PageLoadRowChanging(this, new yaf_PageLoadRowChangeEvent(((yaf_PageLoadRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.yaf_PageLoadRowDeleted != null)) {
                    this.yaf_PageLoadRowDeleted(this, new yaf_PageLoadRowChangeEvent(((yaf_PageLoadRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.yaf_PageLoadRowDeleting != null)) {
                    this.yaf_PageLoadRowDeleting(this, new yaf_PageLoadRowChangeEvent(((yaf_PageLoadRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeyaf_PageLoadRow(yaf_PageLoadRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                YAFDB ds = new YAFDB();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "yaf_PageLoadDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class yaf_RegistryDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnRegistryID;
            
            private System.Data.DataColumn columnName;
            
            private System.Data.DataColumn columnValue;
            
            private System.Data.DataColumn columnBoardID;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public yaf_RegistryDataTable() {
                this.TableName = "yaf_Registry";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal yaf_RegistryDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected yaf_RegistryDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RegistryIDColumn {
                get {
                    return this.columnRegistryID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ValueColumn {
                get {
                    return this.columnValue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BoardIDColumn {
                get {
                    return this.columnBoardID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public yaf_RegistryRow this[int index] {
                get {
                    return ((yaf_RegistryRow)(this.Rows[index]));
                }
            }
            
            public event yaf_RegistryRowChangeEventHandler yaf_RegistryRowChanging;
            
            public event yaf_RegistryRowChangeEventHandler yaf_RegistryRowChanged;
            
            public event yaf_RegistryRowChangeEventHandler yaf_RegistryRowDeleting;
            
            public event yaf_RegistryRowChangeEventHandler yaf_RegistryRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addyaf_RegistryRow(yaf_RegistryRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public yaf_RegistryRow Addyaf_RegistryRow(string Name, string Value, int BoardID) {
                yaf_RegistryRow rowyaf_RegistryRow = ((yaf_RegistryRow)(this.NewRow()));
                rowyaf_RegistryRow.ItemArray = new object[] {
                        null,
                        Name,
                        Value,
                        BoardID};
                this.Rows.Add(rowyaf_RegistryRow);
                return rowyaf_RegistryRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public yaf_RegistryRow FindByRegistryID(int RegistryID) {
                return ((yaf_RegistryRow)(this.Rows.Find(new object[] {
                            RegistryID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                yaf_RegistryDataTable cln = ((yaf_RegistryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new yaf_RegistryDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRegistryID = base.Columns["RegistryID"];
                this.columnName = base.Columns["Name"];
                this.columnValue = base.Columns["Value"];
                this.columnBoardID = base.Columns["BoardID"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRegistryID = new System.Data.DataColumn("RegistryID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegistryID);
                this.columnName = new System.Data.DataColumn("Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnValue = new System.Data.DataColumn("Value", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnValue);
                this.columnBoardID = new System.Data.DataColumn("BoardID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoardID);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnRegistryID}, true));
                this.columnRegistryID.AutoIncrement = true;
                this.columnRegistryID.AllowDBNull = false;
                this.columnRegistryID.ReadOnly = true;
                this.columnRegistryID.Unique = true;
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 50;
                this.columnValue.MaxLength = 400;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public yaf_RegistryRow Newyaf_RegistryRow() {
                return ((yaf_RegistryRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new yaf_RegistryRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(yaf_RegistryRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.yaf_RegistryRowChanged != null)) {
                    this.yaf_RegistryRowChanged(this, new yaf_RegistryRowChangeEvent(((yaf_RegistryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.yaf_RegistryRowChanging != null)) {
                    this.yaf_RegistryRowChanging(this, new yaf_RegistryRowChangeEvent(((yaf_RegistryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.yaf_RegistryRowDeleted != null)) {
                    this.yaf_RegistryRowDeleted(this, new yaf_RegistryRowChangeEvent(((yaf_RegistryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.yaf_RegistryRowDeleting != null)) {
                    this.yaf_RegistryRowDeleting(this, new yaf_RegistryRowChangeEvent(((yaf_RegistryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeyaf_RegistryRow(yaf_RegistryRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                YAFDB ds = new YAFDB();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "yaf_RegistryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class yaf_BannedIPDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID;
            
            private System.Data.DataColumn columnBoardID;
            
            private System.Data.DataColumn columnMask;
            
            private System.Data.DataColumn columnSince;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public yaf_BannedIPDataTable() {
                this.TableName = "yaf_BannedIP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal yaf_BannedIPDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected yaf_BannedIPDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BoardIDColumn {
                get {
                    return this.columnBoardID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaskColumn {
                get {
                    return this.columnMask;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SinceColumn {
                get {
                    return this.columnSince;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public yaf_BannedIPRow this[int index] {
                get {
                    return ((yaf_BannedIPRow)(this.Rows[index]));
                }
            }
            
            public event yaf_BannedIPRowChangeEventHandler yaf_BannedIPRowChanging;
            
            public event yaf_BannedIPRowChangeEventHandler yaf_BannedIPRowChanged;
            
            public event yaf_BannedIPRowChangeEventHandler yaf_BannedIPRowDeleting;
            
            public event yaf_BannedIPRowChangeEventHandler yaf_BannedIPRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addyaf_BannedIPRow(yaf_BannedIPRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public yaf_BannedIPRow Addyaf_BannedIPRow(int BoardID, string Mask, System.DateTime Since) {
                yaf_BannedIPRow rowyaf_BannedIPRow = ((yaf_BannedIPRow)(this.NewRow()));
                rowyaf_BannedIPRow.ItemArray = new object[] {
                        null,
                        BoardID,
                        Mask,
                        Since};
                this.Rows.Add(rowyaf_BannedIPRow);
                return rowyaf_BannedIPRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public yaf_BannedIPRow FindByID(int ID) {
                return ((yaf_BannedIPRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                yaf_BannedIPDataTable cln = ((yaf_BannedIPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new yaf_BannedIPDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnBoardID = base.Columns["BoardID"];
                this.columnMask = base.Columns["Mask"];
                this.columnSince = base.Columns["Since"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new System.Data.DataColumn("ID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnBoardID = new System.Data.DataColumn("BoardID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoardID);
                this.columnMask = new System.Data.DataColumn("Mask", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMask);
                this.columnSince = new System.Data.DataColumn("Since", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSince);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnBoardID.AllowDBNull = false;
                this.columnMask.AllowDBNull = false;
                this.columnMask.MaxLength = 15;
                this.columnSince.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public yaf_BannedIPRow Newyaf_BannedIPRow() {
                return ((yaf_BannedIPRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new yaf_BannedIPRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(yaf_BannedIPRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.yaf_BannedIPRowChanged != null)) {
                    this.yaf_BannedIPRowChanged(this, new yaf_BannedIPRowChangeEvent(((yaf_BannedIPRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.yaf_BannedIPRowChanging != null)) {
                    this.yaf_BannedIPRowChanging(this, new yaf_BannedIPRowChangeEvent(((yaf_BannedIPRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.yaf_BannedIPRowDeleted != null)) {
                    this.yaf_BannedIPRowDeleted(this, new yaf_BannedIPRowChangeEvent(((yaf_BannedIPRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.yaf_BannedIPRowDeleting != null)) {
                    this.yaf_BannedIPRowDeleting(this, new yaf_BannedIPRowChangeEvent(((yaf_BannedIPRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeyaf_BannedIPRow(yaf_BannedIPRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                YAFDB ds = new YAFDB();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "yaf_BannedIPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class yaf_PageLoadRow : System.Data.DataRow {
            
            private yaf_PageLoadDataTable tableyaf_PageLoad;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal yaf_PageLoadRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableyaf_PageLoad = ((yaf_PageLoadDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UserID {
                get {
                    return ((int)(this[this.tableyaf_PageLoad.UserIDColumn]));
                }
                set {
                    this[this.tableyaf_PageLoad.UserIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid ProviderUserKey {
                get {
                    try {
                        return ((System.Guid)(this[this.tableyaf_PageLoad.ProviderUserKeyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ProviderUserKey\' in table \'yaf_PageLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableyaf_PageLoad.ProviderUserKeyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UserFlags {
                get {
                    return ((int)(this[this.tableyaf_PageLoad.UserFlagsColumn]));
                }
                set {
                    this[this.tableyaf_PageLoad.UserFlagsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserName {
                get {
                    return ((string)(this[this.tableyaf_PageLoad.UserNameColumn]));
                }
                set {
                    this[this.tableyaf_PageLoad.UserNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Suspended {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableyaf_PageLoad.SuspendedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Suspended\' in table \'yaf_PageLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableyaf_PageLoad.SuspendedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ThemeFile {
                get {
                    try {
                        return ((string)(this[this.tableyaf_PageLoad.ThemeFileColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ThemeFile\' in table \'yaf_PageLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableyaf_PageLoad.ThemeFileColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LanguageFile {
                get {
                    try {
                        return ((string)(this[this.tableyaf_PageLoad.LanguageFileColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LanguageFile\' in table \'yaf_PageLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableyaf_PageLoad.LanguageFileColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TimeZoneUser {
                get {
                    return ((int)(this[this.tableyaf_PageLoad.TimeZoneUserColumn]));
                }
                set {
                    this[this.tableyaf_PageLoad.TimeZoneUserColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PreviousVisit {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableyaf_PageLoad.PreviousVisitColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PreviousVisit\' in table \'yaf_PageLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableyaf_PageLoad.PreviousVisitColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IsGuest {
                get {
                    try {
                        return ((int)(this[this.tableyaf_PageLoad.IsGuestColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IsGuest\' in table \'yaf_PageLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableyaf_PageLoad.IsGuestColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UserID1 {
                get {
                    try {
                        return ((int)(this[this.tableyaf_PageLoad.UserID1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'UserID1\' in table \'yaf_PageLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableyaf_PageLoad.UserID1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ForumID {
                get {
                    try {
                        return ((int)(this[this.tableyaf_PageLoad.ForumIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ForumID\' in table \'yaf_PageLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableyaf_PageLoad.ForumIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IsAdmin {
                get {
                    try {
                        return ((int)(this[this.tableyaf_PageLoad.IsAdminColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IsAdmin\' in table \'yaf_PageLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableyaf_PageLoad.IsAdminColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IsForumModerator {
                get {
                    try {
                        return ((int)(this[this.tableyaf_PageLoad.IsForumModeratorColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IsForumModerator\' in table \'yaf_PageLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableyaf_PageLoad.IsForumModeratorColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IsModerator {
                get {
                    try {
                        return ((int)(this[this.tableyaf_PageLoad.IsModeratorColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IsModerator\' in table \'yaf_PageLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableyaf_PageLoad.IsModeratorColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ReadAccess {
                get {
                    try {
                        return ((int)(this[this.tableyaf_PageLoad.ReadAccessColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ReadAccess\' in table \'yaf_PageLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableyaf_PageLoad.ReadAccessColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PostAccess {
                get {
                    try {
                        return ((int)(this[this.tableyaf_PageLoad.PostAccessColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PostAccess\' in table \'yaf_PageLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableyaf_PageLoad.PostAccessColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ReplyAccess {
                get {
                    try {
                        return ((int)(this[this.tableyaf_PageLoad.ReplyAccessColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ReplyAccess\' in table \'yaf_PageLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableyaf_PageLoad.ReplyAccessColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PriorityAccess {
                get {
                    try {
                        return ((int)(this[this.tableyaf_PageLoad.PriorityAccessColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PriorityAccess\' in table \'yaf_PageLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableyaf_PageLoad.PriorityAccessColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PollAccess {
                get {
                    try {
                        return ((int)(this[this.tableyaf_PageLoad.PollAccessColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PollAccess\' in table \'yaf_PageLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableyaf_PageLoad.PollAccessColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int VoteAccess {
                get {
                    try {
                        return ((int)(this[this.tableyaf_PageLoad.VoteAccessColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'VoteAccess\' in table \'yaf_PageLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableyaf_PageLoad.VoteAccessColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ModeratorAccess {
                get {
                    try {
                        return ((int)(this[this.tableyaf_PageLoad.ModeratorAccessColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ModeratorAccess\' in table \'yaf_PageLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableyaf_PageLoad.ModeratorAccessColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EditAccess {
                get {
                    try {
                        return ((int)(this[this.tableyaf_PageLoad.EditAccessColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EditAccess\' in table \'yaf_PageLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableyaf_PageLoad.EditAccessColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeleteAccess {
                get {
                    try {
                        return ((int)(this[this.tableyaf_PageLoad.DeleteAccessColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DeleteAccess\' in table \'yaf_PageLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableyaf_PageLoad.DeleteAccessColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UploadAccess {
                get {
                    try {
                        return ((int)(this[this.tableyaf_PageLoad.UploadAccessColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'UploadAccess\' in table \'yaf_PageLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableyaf_PageLoad.UploadAccessColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CategoryID {
                get {
                    try {
                        return ((int)(this[this.tableyaf_PageLoad.CategoryIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CategoryID\' in table \'yaf_PageLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableyaf_PageLoad.CategoryIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CategoryName {
                get {
                    try {
                        return ((string)(this[this.tableyaf_PageLoad.CategoryNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CategoryName\' in table \'yaf_PageLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableyaf_PageLoad.CategoryNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ForumID1 {
                get {
                    try {
                        return ((int)(this[this.tableyaf_PageLoad.ForumID1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ForumID1\' in table \'yaf_PageLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableyaf_PageLoad.ForumID1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ForumName {
                get {
                    try {
                        return ((string)(this[this.tableyaf_PageLoad.ForumNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ForumName\' in table \'yaf_PageLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableyaf_PageLoad.ForumNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TopicID {
                get {
                    try {
                        return ((int)(this[this.tableyaf_PageLoad.TopicIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TopicID\' in table \'yaf_PageLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableyaf_PageLoad.TopicIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TopicName {
                get {
                    try {
                        return ((string)(this[this.tableyaf_PageLoad.TopicNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TopicName\' in table \'yaf_PageLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableyaf_PageLoad.TopicNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MailsPending {
                get {
                    try {
                        return ((int)(this[this.tableyaf_PageLoad.MailsPendingColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MailsPending\' in table \'yaf_PageLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableyaf_PageLoad.MailsPendingColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Incoming {
                get {
                    try {
                        return ((int)(this[this.tableyaf_PageLoad.IncomingColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Incoming\' in table \'yaf_PageLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableyaf_PageLoad.IncomingColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ForumTheme {
                get {
                    try {
                        return ((string)(this[this.tableyaf_PageLoad.ForumThemeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ForumTheme\' in table \'yaf_PageLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableyaf_PageLoad.ForumThemeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProviderUserKeyNull() {
                return this.IsNull(this.tableyaf_PageLoad.ProviderUserKeyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProviderUserKeyNull() {
                this[this.tableyaf_PageLoad.ProviderUserKeyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuspendedNull() {
                return this.IsNull(this.tableyaf_PageLoad.SuspendedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuspendedNull() {
                this[this.tableyaf_PageLoad.SuspendedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThemeFileNull() {
                return this.IsNull(this.tableyaf_PageLoad.ThemeFileColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThemeFileNull() {
                this[this.tableyaf_PageLoad.ThemeFileColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLanguageFileNull() {
                return this.IsNull(this.tableyaf_PageLoad.LanguageFileColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLanguageFileNull() {
                this[this.tableyaf_PageLoad.LanguageFileColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreviousVisitNull() {
                return this.IsNull(this.tableyaf_PageLoad.PreviousVisitColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreviousVisitNull() {
                this[this.tableyaf_PageLoad.PreviousVisitColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsGuestNull() {
                return this.IsNull(this.tableyaf_PageLoad.IsGuestColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsGuestNull() {
                this[this.tableyaf_PageLoad.IsGuestColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserID1Null() {
                return this.IsNull(this.tableyaf_PageLoad.UserID1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserID1Null() {
                this[this.tableyaf_PageLoad.UserID1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsForumIDNull() {
                return this.IsNull(this.tableyaf_PageLoad.ForumIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetForumIDNull() {
                this[this.tableyaf_PageLoad.ForumIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsAdminNull() {
                return this.IsNull(this.tableyaf_PageLoad.IsAdminColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsAdminNull() {
                this[this.tableyaf_PageLoad.IsAdminColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsForumModeratorNull() {
                return this.IsNull(this.tableyaf_PageLoad.IsForumModeratorColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsForumModeratorNull() {
                this[this.tableyaf_PageLoad.IsForumModeratorColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsModeratorNull() {
                return this.IsNull(this.tableyaf_PageLoad.IsModeratorColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsModeratorNull() {
                this[this.tableyaf_PageLoad.IsModeratorColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReadAccessNull() {
                return this.IsNull(this.tableyaf_PageLoad.ReadAccessColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReadAccessNull() {
                this[this.tableyaf_PageLoad.ReadAccessColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPostAccessNull() {
                return this.IsNull(this.tableyaf_PageLoad.PostAccessColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPostAccessNull() {
                this[this.tableyaf_PageLoad.PostAccessColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReplyAccessNull() {
                return this.IsNull(this.tableyaf_PageLoad.ReplyAccessColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReplyAccessNull() {
                this[this.tableyaf_PageLoad.ReplyAccessColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriorityAccessNull() {
                return this.IsNull(this.tableyaf_PageLoad.PriorityAccessColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriorityAccessNull() {
                this[this.tableyaf_PageLoad.PriorityAccessColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPollAccessNull() {
                return this.IsNull(this.tableyaf_PageLoad.PollAccessColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPollAccessNull() {
                this[this.tableyaf_PageLoad.PollAccessColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoteAccessNull() {
                return this.IsNull(this.tableyaf_PageLoad.VoteAccessColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoteAccessNull() {
                this[this.tableyaf_PageLoad.VoteAccessColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModeratorAccessNull() {
                return this.IsNull(this.tableyaf_PageLoad.ModeratorAccessColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModeratorAccessNull() {
                this[this.tableyaf_PageLoad.ModeratorAccessColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEditAccessNull() {
                return this.IsNull(this.tableyaf_PageLoad.EditAccessColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEditAccessNull() {
                this[this.tableyaf_PageLoad.EditAccessColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleteAccessNull() {
                return this.IsNull(this.tableyaf_PageLoad.DeleteAccessColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeleteAccessNull() {
                this[this.tableyaf_PageLoad.DeleteAccessColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUploadAccessNull() {
                return this.IsNull(this.tableyaf_PageLoad.UploadAccessColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUploadAccessNull() {
                this[this.tableyaf_PageLoad.UploadAccessColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryIDNull() {
                return this.IsNull(this.tableyaf_PageLoad.CategoryIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryIDNull() {
                this[this.tableyaf_PageLoad.CategoryIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryNameNull() {
                return this.IsNull(this.tableyaf_PageLoad.CategoryNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryNameNull() {
                this[this.tableyaf_PageLoad.CategoryNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsForumID1Null() {
                return this.IsNull(this.tableyaf_PageLoad.ForumID1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetForumID1Null() {
                this[this.tableyaf_PageLoad.ForumID1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsForumNameNull() {
                return this.IsNull(this.tableyaf_PageLoad.ForumNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetForumNameNull() {
                this[this.tableyaf_PageLoad.ForumNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTopicIDNull() {
                return this.IsNull(this.tableyaf_PageLoad.TopicIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTopicIDNull() {
                this[this.tableyaf_PageLoad.TopicIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTopicNameNull() {
                return this.IsNull(this.tableyaf_PageLoad.TopicNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTopicNameNull() {
                this[this.tableyaf_PageLoad.TopicNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMailsPendingNull() {
                return this.IsNull(this.tableyaf_PageLoad.MailsPendingColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMailsPendingNull() {
                this[this.tableyaf_PageLoad.MailsPendingColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIncomingNull() {
                return this.IsNull(this.tableyaf_PageLoad.IncomingColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIncomingNull() {
                this[this.tableyaf_PageLoad.IncomingColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsForumThemeNull() {
                return this.IsNull(this.tableyaf_PageLoad.ForumThemeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetForumThemeNull() {
                this[this.tableyaf_PageLoad.ForumThemeColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class yaf_RegistryRow : System.Data.DataRow {
            
            private yaf_RegistryDataTable tableyaf_Registry;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal yaf_RegistryRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableyaf_Registry = ((yaf_RegistryDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RegistryID {
                get {
                    return ((int)(this[this.tableyaf_Registry.RegistryIDColumn]));
                }
                set {
                    this[this.tableyaf_Registry.RegistryIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    return ((string)(this[this.tableyaf_Registry.NameColumn]));
                }
                set {
                    this[this.tableyaf_Registry.NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Value {
                get {
                    try {
                        return ((string)(this[this.tableyaf_Registry.ValueColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Value\' in table \'yaf_Registry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableyaf_Registry.ValueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BoardID {
                get {
                    try {
                        return ((int)(this[this.tableyaf_Registry.BoardIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BoardID\' in table \'yaf_Registry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableyaf_Registry.BoardIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNull() {
                return this.IsNull(this.tableyaf_Registry.ValueColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNull() {
                this[this.tableyaf_Registry.ValueColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBoardIDNull() {
                return this.IsNull(this.tableyaf_Registry.BoardIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBoardIDNull() {
                this[this.tableyaf_Registry.BoardIDColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class yaf_BannedIPRow : System.Data.DataRow {
            
            private yaf_BannedIPDataTable tableyaf_BannedIP;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal yaf_BannedIPRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableyaf_BannedIP = ((yaf_BannedIPDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableyaf_BannedIP.IDColumn]));
                }
                set {
                    this[this.tableyaf_BannedIP.IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BoardID {
                get {
                    return ((int)(this[this.tableyaf_BannedIP.BoardIDColumn]));
                }
                set {
                    this[this.tableyaf_BannedIP.BoardIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mask {
                get {
                    return ((string)(this[this.tableyaf_BannedIP.MaskColumn]));
                }
                set {
                    this[this.tableyaf_BannedIP.MaskColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Since {
                get {
                    return ((System.DateTime)(this[this.tableyaf_BannedIP.SinceColumn]));
                }
                set {
                    this[this.tableyaf_BannedIP.SinceColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class yaf_PageLoadRowChangeEvent : System.EventArgs {
            
            private yaf_PageLoadRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public yaf_PageLoadRowChangeEvent(yaf_PageLoadRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public yaf_PageLoadRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class yaf_RegistryRowChangeEvent : System.EventArgs {
            
            private yaf_RegistryRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public yaf_RegistryRowChangeEvent(yaf_RegistryRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public yaf_RegistryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class yaf_BannedIPRowChangeEvent : System.EventArgs {
            
            private yaf_BannedIPRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public yaf_BannedIPRowChangeEvent(yaf_BannedIPRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public yaf_BannedIPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace YAF.Classes.Data.YAFDBTableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class yaf_PageLoadTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public yaf_PageLoadTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "yaf_PageLoad";
            tableMapping.ColumnMappings.Add("UserID", "UserID");
            tableMapping.ColumnMappings.Add("ProviderUserKey", "ProviderUserKey");
            tableMapping.ColumnMappings.Add("UserFlags", "UserFlags");
            tableMapping.ColumnMappings.Add("UserName", "UserName");
            tableMapping.ColumnMappings.Add("Suspended", "Suspended");
            tableMapping.ColumnMappings.Add("ThemeFile", "ThemeFile");
            tableMapping.ColumnMappings.Add("LanguageFile", "LanguageFile");
            tableMapping.ColumnMappings.Add("TimeZoneUser", "TimeZoneUser");
            tableMapping.ColumnMappings.Add("PreviousVisit", "PreviousVisit");
            tableMapping.ColumnMappings.Add("IsGuest", "IsGuest");
            tableMapping.ColumnMappings.Add("UserID1", "UserID1");
            tableMapping.ColumnMappings.Add("ForumID", "ForumID");
            tableMapping.ColumnMappings.Add("IsAdmin", "IsAdmin");
            tableMapping.ColumnMappings.Add("IsForumModerator", "IsForumModerator");
            tableMapping.ColumnMappings.Add("IsModerator", "IsModerator");
            tableMapping.ColumnMappings.Add("ReadAccess", "ReadAccess");
            tableMapping.ColumnMappings.Add("PostAccess", "PostAccess");
            tableMapping.ColumnMappings.Add("ReplyAccess", "ReplyAccess");
            tableMapping.ColumnMappings.Add("PriorityAccess", "PriorityAccess");
            tableMapping.ColumnMappings.Add("PollAccess", "PollAccess");
            tableMapping.ColumnMappings.Add("VoteAccess", "VoteAccess");
            tableMapping.ColumnMappings.Add("ModeratorAccess", "ModeratorAccess");
            tableMapping.ColumnMappings.Add("EditAccess", "EditAccess");
            tableMapping.ColumnMappings.Add("DeleteAccess", "DeleteAccess");
            tableMapping.ColumnMappings.Add("UploadAccess", "UploadAccess");
            tableMapping.ColumnMappings.Add("CategoryID", "CategoryID");
            tableMapping.ColumnMappings.Add("CategoryName", "CategoryName");
            tableMapping.ColumnMappings.Add("ForumID1", "ForumID1");
            tableMapping.ColumnMappings.Add("ForumName", "ForumName");
            tableMapping.ColumnMappings.Add("TopicID", "TopicID");
            tableMapping.ColumnMappings.Add("TopicName", "TopicName");
            tableMapping.ColumnMappings.Add("MailsPending", "MailsPending");
            tableMapping.ColumnMappings.Add("Incoming", "Incoming");
            tableMapping.ColumnMappings.Add("ForumTheme", "ForumTheme");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::YAF.Classes.Data.Properties.Settings.Default.yafnetConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.yaf_pageload";
            this._commandCollection[0].CommandType = System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@SessionID", System.Data.SqlDbType.NVarChar, 24, System.Data.ParameterDirection.Input, 0, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@BoardID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@UserKey", System.Data.SqlDbType.UniqueIdentifier, 16, System.Data.ParameterDirection.Input, 0, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@IP", System.Data.SqlDbType.NVarChar, 15, System.Data.ParameterDirection.Input, 0, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Location", System.Data.SqlDbType.NVarChar, 50, System.Data.ParameterDirection.Input, 0, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Browser", System.Data.SqlDbType.NVarChar, 50, System.Data.ParameterDirection.Input, 0, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Platform", System.Data.SqlDbType.NVarChar, 50, System.Data.ParameterDirection.Input, 0, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@CategoryID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@ForumID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@TopicID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@MessageID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(YAFDB.yaf_PageLoadDataTable dataTable, string SessionID, System.Nullable<int> BoardID, System.Nullable<System.Guid> UserKey, string IP, string Location, string Browser, string Platform, System.Nullable<int> CategoryID, System.Nullable<int> ForumID, System.Nullable<int> TopicID, System.Nullable<int> MessageID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((SessionID == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(SessionID));
            }
            if ((BoardID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(BoardID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((UserKey.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.Guid)(UserKey.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((IP == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(IP));
            }
            if ((Location == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(Location));
            }
            if ((Browser == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(Browser));
            }
            if ((Platform == null)) {
                this.Adapter.SelectCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = ((string)(Platform));
            }
            if ((CategoryID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((int)(CategoryID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((ForumID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[9].Value = ((int)(ForumID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((TopicID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[10].Value = ((int)(TopicID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((MessageID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[11].Value = ((int)(MessageID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual YAFDB.yaf_PageLoadDataTable GetData(string SessionID, System.Nullable<int> BoardID, System.Nullable<System.Guid> UserKey, string IP, string Location, string Browser, string Platform, System.Nullable<int> CategoryID, System.Nullable<int> ForumID, System.Nullable<int> TopicID, System.Nullable<int> MessageID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((SessionID == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(SessionID));
            }
            if ((BoardID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(BoardID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((UserKey.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.Guid)(UserKey.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((IP == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(IP));
            }
            if ((Location == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(Location));
            }
            if ((Browser == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(Browser));
            }
            if ((Platform == null)) {
                this.Adapter.SelectCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = ((string)(Platform));
            }
            if ((CategoryID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((int)(CategoryID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((ForumID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[9].Value = ((int)(ForumID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((TopicID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[10].Value = ((int)(TopicID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((MessageID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[11].Value = ((int)(MessageID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[11].Value = System.DBNull.Value;
            }
            YAFDB.yaf_PageLoadDataTable dataTable = new YAFDB.yaf_PageLoadDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class yaf_RegistryTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public yaf_RegistryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "yaf_Registry";
            tableMapping.ColumnMappings.Add("RegistryID", "RegistryID");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("Value", "Value");
            tableMapping.ColumnMappings.Add("BoardID", "BoardID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "dbo.yaf_registry_save";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.StoredProcedure;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Name", System.Data.SqlDbType.NVarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "Name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Value", System.Data.SqlDbType.NVarChar, 400, System.Data.ParameterDirection.Input, 0, 0, "Value", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BoardID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 10, 0, "BoardID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "dbo.yaf_registry_save";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.StoredProcedure;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Name", System.Data.SqlDbType.NVarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "Name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Value", System.Data.SqlDbType.NVarChar, 400, System.Data.ParameterDirection.Input, 0, 0, "Value", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BoardID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 10, 0, "BoardID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::YAF.Classes.Data.Properties.Settings.Default.yafnetConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.yaf_registry_list";
            this._commandCollection[0].CommandType = System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Name", System.Data.SqlDbType.NVarChar, 50, System.Data.ParameterDirection.Input, 0, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@BoardID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(YAFDB.yaf_RegistryDataTable dataTable, string Name, System.Nullable<int> BoardID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Name == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Name));
            }
            if ((BoardID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(BoardID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual YAFDB.yaf_RegistryDataTable GetData(string Name, System.Nullable<int> BoardID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Name == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Name));
            }
            if ((BoardID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(BoardID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = System.DBNull.Value;
            }
            YAFDB.yaf_RegistryDataTable dataTable = new YAFDB.yaf_RegistryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YAFDB.yaf_RegistryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YAFDB dataSet) {
            return this.Adapter.Update(dataSet, "yaf_Registry");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Name, string Value, System.Nullable<int> BoardID) {
            if ((Name == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Name));
            }
            if ((Value == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Value));
            }
            if ((BoardID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(BoardID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Name, string Value, System.Nullable<int> BoardID) {
            if ((Name == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Name));
            }
            if ((Value == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Value));
            }
            if ((BoardID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(BoardID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class yaf_BannedIPTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public yaf_BannedIPTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "yaf_BannedIP";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("BoardID", "BoardID");
            tableMapping.ColumnMappings.Add("Mask", "Mask");
            tableMapping.ColumnMappings.Add("Since", "Since");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "dbo.yaf_bannedip_delete";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.StoredProcedure;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 10, 0, "ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "dbo.yaf_bannedip_save";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.StoredProcedure;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 10, 0, "ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BoardID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 10, 0, "BoardID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Mask", System.Data.SqlDbType.NVarChar, 15, System.Data.ParameterDirection.Input, 0, 0, "Mask", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "dbo.yaf_bannedip_save";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.StoredProcedure;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 10, 0, "ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BoardID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 10, 0, "BoardID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Mask", System.Data.SqlDbType.NVarChar, 15, System.Data.ParameterDirection.Input, 0, 0, "Mask", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::YAF.Classes.Data.Properties.Settings.Default.yafnetConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.yaf_bannedip_list";
            this._commandCollection[0].CommandType = System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@BoardID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(YAFDB.yaf_BannedIPDataTable dataTable, System.Nullable<int> BoardID, System.Nullable<int> ID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((BoardID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(BoardID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((ID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(ID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual YAFDB.yaf_BannedIPDataTable GetData(System.Nullable<int> BoardID, System.Nullable<int> ID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((BoardID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(BoardID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((ID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(ID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = System.DBNull.Value;
            }
            YAFDB.yaf_BannedIPDataTable dataTable = new YAFDB.yaf_BannedIPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YAFDB.yaf_BannedIPDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YAFDB dataSet) {
            return this.Adapter.Update(dataSet, "yaf_BannedIP");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.Nullable<int> ID) {
            if ((ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Nullable<int> ID, System.Nullable<int> BoardID, string Mask) {
            if ((ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((BoardID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(BoardID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Mask == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Mask));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.Nullable<int> ID, System.Nullable<int> BoardID, string Mask) {
            if ((ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((BoardID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(BoardID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Mask == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Mask));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
}

#pragma warning restore 1591